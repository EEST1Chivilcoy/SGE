@page "/Solicitud/CuentaEscolar"
@using PaginaEEST1.Data.Models.PhysicalObjects.PhysicalAssets.Request
@using System.ComponentModel.DataAnnotations
@using PaginaEEST1.Data.ViewModels
@using PaginaEEST1.Data.Enums
@using PaginaEEST1.Services
@inject IRequestService RequestService

<Flex Vertical Align="center" Justify="space-between" Style="padding: 16px; width: 100%; max-width: 1200px; margin: auto;">
    <h1 class="top-intro"><b>Te damos la bienvenida. 👋</b></h1>
    <Paragraph Class="top-intro">A continuación comenzaras con la solicitud de tu cuenta estudiantil.</Paragraph>
    <Paragraph Class="top-intro">Esta cuenta te dara la posibilidad de contar con multiples beneficios en diversas paginas que lo ofrezcan.</Paragraph>
    <br />
    <Card Style="width: 100%; background-color: #F0F7FD; border-radius: 1vw; padding: 16px;">
        <Steps Current="current" Class="site-navigation-steps">
            <Step Title="Personal" />
            <Step Title="Contacto" />
            <Step Title="Curso" />
        </Steps>
        <br />
        <Form Model="RequestVM" OnFinish="OnFinish">
            @switch (current)
            {
                case 0:
                    <div>
                        <h3>Información personal</h3>
                        <hr /> <br />
                        <FormItem Label="Nombre">
                            <Input @bind-Value="@RequestVM.StudentName" />
                        </FormItem>
                        <FormItem Label="Apellido">
                            <Input @bind-Value="@RequestVM.StudentSurname" />
                        </FormItem>
                        <FormItem Label="DNI">
                            <Input @bind-Value="@RequestVM.DNI" />
                        </FormItem>
                    </div>
                    break;
                case 1:
                    <div>
                        <h3>Información de contacto</h3>
                        <hr /> <br />
                        <FormItem Label="Correo electrónico">
                            <Input @bind-Value="@RequestVM.StudentEmail" />
                        </FormItem>
                        <FormItem Label="Número de teléfono">
                            <Input @bind-Value="@RequestVM.StudentCellPhoneNumber" />
                        </FormItem>
                    </div>
                    break;
                case 2:
                    <div>
                        <h3>Información de curso</h3>
                        <hr /> <br />
                        <FormItem Label="Año cursando">
                            <Input @bind-Value="@RequestVM.SchoolYear" />
                        </FormItem>
                        <FormItem Label="División de curso">
                            <Input @bind-Value="@RequestVM.SchoolDivision" />
                        </FormItem>
                    </div>
                    break;
                default:
                    <p>Cargando . . .</p>
                    break;
            }
            <Flex Align="center" Justify="space-between" Style="width: 100%; flex-wrap: wrap; gap: 10px;">
                @if (current > 0)
                {
                    <Button OnClick="() => {current --;}">Anterior</Button>
                }
                @if (current < 2)
                {
                    <Button OnClick="() => {current ++;}">Siguiente</Button>
                }
                @if (current == 2)
                {
                    <Button Type="primary" HtmlType="submit">Confirmar</Button>
                }
            </Flex>
        </Form>
    </Card>
</Flex>

<Modal Footer="null" Title="@("Success")"
       Visible="@_visible"
       OnCancel="@(args => _visible = false)">
    <Result Status="success"
            Title="Se cargó tu solicitud correctamente."
            SubTitle="Ya puedes cerrar esta ventana.">
    </Result>
</Modal>

@code {
    private int current { get; set; }
    private bool _visible = false;

    private StudentAccountRequestViewModel RequestVM = new();

    private async Task OnFinish()
    {
        StudentAccountRequest Request = new()
            {
                Type = TypeRequest.StudentAccountRequest,
                RequestDate = DateTime.Now,
                StudentName = RequestVM.StudentName,
                StudentSurname = RequestVM.StudentSurname,
                StudentEmail = RequestVM.StudentEmail,
                StudentCellPhoneNumber = RequestVM.StudentCellPhoneNumber,
                SchoolYear = RequestVM.SchoolYear,
                SchoolDivision = RequestVM.SchoolDivision,
                DNI = RequestVM.DNI
            };
        await RequestService.SaveRequest(Request);
        _visible = true;
        RequestVM = new();
        StateHasChanged();
    }

    private class StudentAccountRequestViewModel
    {
        [Required]
        public string? StudentName { get; set; }
        [Required]
        public string? StudentSurname { get; set; }
        [Required]
        public string? StudentEmail { get; set; }
        [Required]
        public string? StudentCellPhoneNumber { get; set; }
        [Required]
        public string? SchoolYear { get; set; }
        [Required]
        public string? SchoolDivision { get; set; }
        [Required]
        public int? DNI { get; set; }
    }
}
