@page "/inscripcion"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@using PaginaEEST1.Services
@inject ISchoolEnrollmentService EnrollmentService

<head>
	<title>Inscripción</title>
</head>

<style>
	.inscripcion-content {
		width: 100%;
		max-width: 1140px;
		margin-left: auto;
		margin-right: auto;
		padding-left: 15px;
		padding-right: 15px;
		margin-top: 3rem;
	}
</style>

<div class="inscripcion-content">
	<Flex Justify="center" Align="center" Style="height: 100%; width:100%;">
		<Card Title="Formulario de Inscripción" Style="width: 100%; max-width: 800px; height: auto; margin-bottom: 10px;">
			<Body>
				@if (IsLoading)
				{
					<Skeleton Active />
				}
				else if (!string.IsNullOrEmpty(GoogleFormUrl))
				{
					<iframe src="@GoogleFormUrl" width="100%" height="600px" frameborder="0" marginheight="0" marginwidth="0">Cargando…</iframe>
				}
				else
				{
					<Result Status="error"
							Title="Las inscripciones no están abiertas"
							SubTitle="Por favor, inténtelo más tarde o verifique la disponibilidad de las inscripciones.">
						<div class="desc">
							<Paragraph>
								<Text Strong Style="font-size: 16px;">
									Lo sentimos, las inscripciones están cerradas en este momento.
								</Text>
							</Paragraph>
							<Paragraph>
								<Icon Type="close-circle" Theme="Outline" Class="site-result-demo-error-icon" />
								Si necesitas más información, contacta con la Escuela al 📞 2346-431330.
							</Paragraph>
						</div>
					</Result>
				}
			</Body>
		</Card>
	</Flex>
</div>

@code {
	private string? GoogleFormUrl;
	private bool IsLoading = true;
	private int WindowWidth;
	private bool IsRendered;

	protected override async Task OnInitializedAsync()
	{
		await LoadEnrollment();
	}

	private async Task LoadEnrollment()
	{
		var enrollment = await EnrollmentService.GetCurrentEnrollmentAsync();
		GoogleFormUrl = enrollment?.GoogleFormLink;
		IsLoading = false;
		StateHasChanged();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			WindowWidth = await JSRuntime.InvokeAsync<int>("getWindowWidth");
			IsRendered = true;

			if (WindowWidth < 768 && !string.IsNullOrEmpty(GoogleFormUrl))
			{
				NavigationManager.NavigateTo(GoogleFormUrl, true);
			}

			StateHasChanged();
		}
	}
}