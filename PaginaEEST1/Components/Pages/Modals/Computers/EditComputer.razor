@using PaginaEEST1.Services
@using PaginaEEST1.Data.ViewModels
@using PaginaEEST1.Data.Enums
@using PaginaEEST1.Data.Models.PhysicalObjects
@inject IMessageService message
@inject IComputerService ComputerService
@inject IMessageService message

<div clas="container">
    <Form Model="@computerVM" OnFinish="OnFinish">
        <div clas="form-grid">
            <FormItem Label="Estado del Ordenador">
                <EnumSelect TEnum="ComputerStatus" @bind-Value="@computerVM.Status" />
            </FormItem>
            <FormItem Label="Nombre o Codigo">
                <Input @bind-Value="@computerVM.DeviceName" />
            </FormItem>
            <FormItem Label="Sistema Operativo">
                <Input @bind-Value="@computerVM.OperatingSystem" />
            </FormItem>
            <FormItem Label="Procesador">
                <Input @bind-Value="@computerVM.Processor" />
            </FormItem>
            <FormItem Label="RAM">
                <Input @bind-Value="@computerVM.RAM">
                <Suffix>
                    GB
                </Suffix>
                </Input>
            </FormItem>
            <FormItem Label="Almacenamiento">
                <Input @bind-Value="@computerVM.Storage">
                <Suffix>
                    GB
                </Suffix>
                </Input>
            </FormItem>
            <FormItem Label="Tipo de almacenamiento">
                <EnumSelect TEnum="TypeStorage" @bind-Value="@computerVM.typeStorage" />
            </FormItem>
            @if (computerVM is Desktop desktop)
            {
                <FormItem Label="Ubicación dentro de la Institución">
                    <Input @bind-Value="@desktop.Location" />
                </FormItem>
            }
            @if (computerVM is Netbook netbook)
            {
                <FormItem Label="Modelo de la Netbook">
                    <Input @bind-Value="@netbook.Model" />
                </FormItem>
                <FormItem Label="Disponibilidad de la Netbook">
                    <Switch @bind-Value="@netbook.IsAvailable" />
                </FormItem>
            }
            <FormItem>
                <Button Type="primary" HtmlType="submit">Editar</Button>
                <Button OnClick="HandleClose">Cerrar</Button>
            </FormItem>
        </div>
    </Form>
</div>

@code {
    [Parameter] public EventCallback<bool> OnClose { get; set; }
    [Parameter] public int ID { get; set; }
    private Computer? computerVM { get; set; }

    // Funciones
    private async Task HandleClose()
    {
        await OnClose.InvokeAsync(false);
    }
    private async Task OnFinish()
    {
        try
        {
            await ComputerService.EditComputer(computerVM);
            await OnClose.InvokeAsync(true);
            StateHasChanged();
            await message.Success("Ordenador editado con exito");
        }
        catch
        {
            await message.Warning("Error inesperado al editar el Ordenador.");
        }
    }
    protected override async Task OnInitializedAsync()
    {
        var computer = await ComputerService.GetComputer(ID);
        if (computer != null)
            computerVM = computer;
        StateHasChanged();
    }
}